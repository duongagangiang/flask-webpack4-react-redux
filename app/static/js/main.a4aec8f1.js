(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[0],{BD8n:function(e,t){},G6OI:function(e,t){},"KaO+":function(e,t){},OnFQ:function(e,t){},dVLL:function(e,t){},tjUo:function(e,t,n){"use strict";n.r(t);var r=n("q1tI");var o=n.n(r);var a=n("i8i4");var u=n.n(a);var i=n("2iEm");var c=n("wIs1");var l=n("/MKj");var f=n("dVLL");function s(e){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){s=function e(t){return typeof t}}else{s=function e(t){return t&&typeof Symbol==="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}}return s(e)}function p(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||false;r.configurable=true;if("value"in r)r.writable=true;Object.defineProperty(e,r.key,r)}}function m(e,t,n){if(t)y(e.prototype,t);if(n)y(e,n);return e}function b(e,t){if(t&&(s(t)==="object"||typeof t==="function")){return t}return v(e)}function v(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function h(e){h=Object.setPrototypeOf?Object.getPrototypeOf:function e(t){return t.__proto__||Object.getPrototypeOf(t)};return h(e)}function d(e,t){if(typeof t!=="function"&&t!==null){throw new TypeError("Super expression must either be null or a function")}e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:true,configurable:true}});if(t)E(e,t)}function E(e,t){E=Object.setPrototypeOf||function e(t,n){t.__proto__=n;return t};return E(e,t)}var O=function(e){d(t,e);function t(e){p(this,t);return b(this,h(t).call(this,e))}m(t,[{key:"componentWillReceiveProps",value:function e(t,n){}},{key:"logOut",value:function e(t){t.preventDefault();localStorage.removeItem("userToken");this.props.history.push("/")}},{key:"render",value:function e(){var t=o.a.createElement("ul",{className:"navbar-nav"},o.a.createElement("li",{className:"nav-item"},o.a.createElement(i["a"],{class:"nav-link",to:"/login"},"Login")),o.a.createElement("li",{className:"nav-item"},o.a.createElement(i["a"],{class:"nav-link",to:"/register"},"Register")));var n=o.a.createElement("ul",{className:"navbar-nav"},o.a.createElement("li",{className:"nav-item"},o.a.createElement(i["a"],{class:"nav-link",to:"/profile"},"Profile")),o.a.createElement("li",{className:"nav-item"},o.a.createElement(i["a"],{class:"nav-link",to:"/post"},"Post")),o.a.createElement("li",{className:"nav-item"},o.a.createElement("a",{href:"",className:"nav-link",onClick:this.logOut.bind(this)},"Logout")));return o.a.createElement("nav",{class:"navbar navbar-expand-lg navbar-light bg-light"},o.a.createElement(i["a"],{class:"navbar-brand",to:"/"},"Navbar"),o.a.createElement("button",{class:"navbar-toggler",type:"button","data-toggle":"collapse","data-target":"#navbarSupportedContent","aria-controls":"navbarSupportedContent","aria-expanded":"false","aria-label":"Toggle navigation"},o.a.createElement("span",{class:"navbar-toggler-icon"})),o.a.createElement("div",{class:"collapse navbar-collapse",id:"navbarSupportedContent"},o.a.createElement("ul",{class:"navbar-nav mr-auto"},o.a.createElement("li",{class:"nav-item active"},o.a.createElement(i["a"],{class:"nav-link",to:"/"},"Home ",o.a.createElement("span",{class:"sr-only"},"(current)")))),localStorage.userToken?n:t))}}]);return t}(r["Component"]);var g=function e(t){return{currentUser:t.currentUser}};var w=Object(c["a"])(Object(l["b"])(g,null)(O));var S=n("oFFJ");var _=n("2INN");var j=n("vDqi");var P=n.n(j);function k(e){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"GET";var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;return P()({method:t,url:e,data:n}).catch(function(e){return console.log(e)})}var T={UPDATE_USER:"User@UPDATE_USER",GET_USERS:"User@GET_USERS"};var U={actUpdateCurrentUser:function e(t){return{type:T.UPDATE_USER,user:t}},actGetUsers:function e(t){return{type:T.GET_USERS,users:t}}};var N={getUsers:function e(){return function(t){return k("/get-users").then(function(e){t(U.actGetUsers(e.data))})}}};var C=n("17x9");var x=n.n(C);var R=n("OnFQ");function I(e){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){I=function e(t){return typeof t}}else{I=function e(t){return t&&typeof Symbol==="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}}return I(e)}function D(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}function G(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||false;r.configurable=true;if("value"in r)r.writable=true;Object.defineProperty(e,r.key,r)}}function L(e,t,n){if(t)G(e.prototype,t);if(n)G(e,n);return e}function F(e,t){if(t&&(I(t)==="object"||typeof t==="function")){return t}return A(e)}function A(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function H(e){H=Object.setPrototypeOf?Object.getPrototypeOf:function e(t){return t.__proto__||Object.getPrototypeOf(t)};return H(e)}function B(e,t){if(typeof t!=="function"&&t!==null){throw new TypeError("Super expression must either be null or a function")}e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:true,configurable:true}});if(t)M(e,t)}function M(e,t){M=Object.setPrototypeOf||function e(t,n){t.__proto__=n;return t};return M(e,t)}function V(e,t,n){if(t in e){Object.defineProperty(e,t,{value:n,enumerable:true,configurable:true,writable:true})}else{e[t]=n}return e}var q=function(e){B(n,e);function n(e){var t;D(this,n);t=F(this,H(n).call(this,e));t.state={users:[]};t.props.getUsers();return t}L(n,[{key:"render",value:function e(){return o.a.createElement("div",{className:"container"},o.a.createElement("table",{className:"table"},o.a.createElement("thead",null,o.a.createElement("tr",null,o.a.createElement("th",{class:"col-xs-3"},"#"),o.a.createElement("th",{class:"col-xs-6"},"Email"),o.a.createElement("th",{class:"col-xs-3"},"Name"))),o.a.createElement("tbody",null,this.props.users&&this.props.users.map(function(e,t){return o.a.createElement("tr",{key:t},o.a.createElement("td",{class:"col-xs-3"},e.id),o.a.createElement("td",{class:"col-xs-6"},e.email),o.a.createElement("td",{class:"col-xs-3"},e.display_name))}))))}}]);return n}(r["Component"]);V(q,"propTypes",{getUsers:x.a.func,users:x.a.array});var J=function e(t){console.log(t);return{currentUser:t.currentUser,users:t.users}};var K=function e(t){return{getUsers:function e(){return t(N.getUsers())}}};var W=Object(l["b"])(J,K)(q);var Q=n("BD8n");var z="LOGIN";var X="GET_USERS";var Y="ABORT_FETCH";var Z="ERROR_FETCH";var $="START_FETCH";var ee="UPDATE_FETCH";var te="GET_PROFILE";var ne=function e(t){return{type:z,currentUser:t}};var re=function e(){return{type:Y}};var oe=function e(t){return{type:Z}};var ae=function e(){return{type:$}};var ue=function e(t){return{type:ee,payload:t}};var ie=function e(t){return k("login","POST",t).then(function(e){localStorage.setItem("userToken",e.data.token);return e.data}).catch(function(e){console.log(e)})};var ce=function e(){return{type:te}};var le=n("BOF4");var fe=n.n(le);function se(e){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){se=function e(t){return typeof t}}else{se=function e(t){return t&&typeof Symbol==="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}}return se(e)}function pe(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}function ye(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||false;r.configurable=true;if("value"in r)r.writable=true;Object.defineProperty(e,r.key,r)}}function me(e,t,n){if(t)ye(e.prototype,t);if(n)ye(e,n);return e}function be(e,t){if(t&&(se(t)==="object"||typeof t==="function")){return t}return Ee(e)}function ve(e){ve=Object.setPrototypeOf?Object.getPrototypeOf:function e(t){return t.__proto__||Object.getPrototypeOf(t)};return ve(e)}function he(e,t){if(typeof t!=="function"&&t!==null){throw new TypeError("Super expression must either be null or a function")}e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:true,configurable:true}});if(t)de(e,t)}function de(e,t){de=Object.setPrototypeOf||function e(t,n){t.__proto__=n;return t};return de(e,t)}function Ee(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function Oe(e,t,n){if(t in e){Object.defineProperty(e,t,{value:n,enumerable:true,configurable:true,writable:true})}else{e[t]=n}return e}var ge=function(e){he(n,e);function n(e){var t;pe(this,n);t=be(this,ve(n).call(this,e));t.state={email:"",password:""};t.handleEmail=t.handleEmail.bind(Ee(Ee(t)));t.handlePassword=t.handlePassword.bind(Ee(Ee(t)));t.setUserLogin=t.setUserLogin.bind(Ee(Ee(t)));return t}me(n,[{key:"handleEmail",value:function e(t){this.setState({email:t.target.value})}},{key:"handlePassword",value:function e(t){this.setState({password:t.target.value})}},{key:"setUserLogin",value:function e(t){var o=this;t.preventDefault();var n={email:this.state.email,password:this.state.password};return ie(n).then(function(e){if(!e.error){o.props.history.push("/");var t=e.token;var n=fe()(t);var r={email:n.identity.email,displayName:n.identity.displayName,role:Number.parseInt(n.identity.role)};o.props.updateCurrentUser(r)}})}},{key:"render",value:function e(){return o.a.createElement("div",{className:"container"},o.a.createElement("form",{id:"form-login",onSubmit:this.setUserLogin},o.a.createElement("div",{class:"form-group",method:"post"},o.a.createElement("label",{for:"inputUsername"},"Username"),o.a.createElement("input",{type:"email",className:"form-control",id:"inputEmail","aria-describedby":"emailHelp",name:"email",placeholder:"Enter email",value:this.state.email,onChange:this.handleEmail}),o.a.createElement("small",{id:"emailHelp",className:"form-text text-muted"},"We'll never share your infomation with anyone else.")),o.a.createElement("div",{className:"form-group"},o.a.createElement("label",{for:"inputPassword"},"Password"),o.a.createElement("input",{type:"password",className:"form-control",id:"inputPassword",name:"password",placeholder:"Password",value:this.state.password,onChange:this.handlePassword})),o.a.createElement("div",{class:"form-check"},o.a.createElement("input",{type:"checkbox",className:"form-check-input",id:"exampleCheck1"}),o.a.createElement("label",{className:"form-check-label",for:"exampleCheck1"},"Check me out")),o.a.createElement("button",{type:"submit",className:"btn btn-primary btn-submit"},"Submit")))}}]);return n}(r["Component"]);Oe(ge,"propTypes",{updateCurrentUser:x.a.func});var we=function e(t){return{}};var Se=function e(n){return{updateCurrentUser:function e(t){return n(U.actUpdateCurrentUser(t))}}};var _e=Object(c["a"])(Object(l["b"])(we,Se)(ge));function je(e){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){je=function e(t){return typeof t}}else{je=function e(t){return t&&typeof Symbol==="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}}return je(e)}function Pe(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}function ke(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||false;r.configurable=true;if("value"in r)r.writable=true;Object.defineProperty(e,r.key,r)}}function Te(e,t,n){if(t)ke(e.prototype,t);if(n)ke(e,n);return e}function Ue(e,t){if(t&&(je(t)==="object"||typeof t==="function")){return t}return Ne(e)}function Ne(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function Ce(e){Ce=Object.setPrototypeOf?Object.getPrototypeOf:function e(t){return t.__proto__||Object.getPrototypeOf(t)};return Ce(e)}function xe(e,t){if(typeof t!=="function"&&t!==null){throw new TypeError("Super expression must either be null or a function")}e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:true,configurable:true}});if(t)Re(e,t)}function Re(e,t){Re=Object.setPrototypeOf||function e(t,n){t.__proto__=n;return t};return Re(e,t)}var Ie=function(e){xe(t,e);function t(){Pe(this,t);return Ue(this,Ce(t).apply(this,arguments))}Te(t,[{key:"render",value:function e(){return o.a.createElement("div",{className:"container"},o.a.createElement("h1",null,"Register working"))}}]);return t}(r["Component"]);var De=Ie;var Ge=n("G6OI");function Le(e){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){Le=function e(t){return typeof t}}else{Le=function e(t){return t&&typeof Symbol==="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}}return Le(e)}function Fe(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}function Ae(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||false;r.configurable=true;if("value"in r)r.writable=true;Object.defineProperty(e,r.key,r)}}function He(e,t,n){if(t)Ae(e.prototype,t);if(n)Ae(e,n);return e}function Be(e,t){if(t&&(Le(t)==="object"||typeof t==="function")){return t}return Me(e)}function Me(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function Ve(e){Ve=Object.setPrototypeOf?Object.getPrototypeOf:function e(t){return t.__proto__||Object.getPrototypeOf(t)};return Ve(e)}function qe(e,t){if(typeof t!=="function"&&t!==null){throw new TypeError("Super expression must either be null or a function")}e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:true,configurable:true}});if(t)Je(e,t)}function Je(e,t){Je=Object.setPrototypeOf||function e(t,n){t.__proto__=n;return t};return Je(e,t)}var Ke=function(e){qe(n,e);function n(e){var t;Fe(this,n);t=Be(this,Ve(n).call(this,e));t.state={email:"",displayName:"",role:0};return t}He(n,[{key:"componentDidMount",value:function e(){var t=localStorage.userToken;var n=fe()(t);this.setState({email:n.identity.email,displayName:n.identity.displayName,role:Number.parseInt(n.identity.role)})}},{key:"render",value:function e(){return o.a.createElement("div",{className:"container"},o.a.createElement("p",null,this.state.email),o.a.createElement("p",null,this.state.displayName),o.a.createElement("p",null,this.state.role))}}]);return n}(r["Component"]);var We=Ke;function Qe(e){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){Qe=function e(t){return typeof t}}else{Qe=function e(t){return t&&typeof Symbol==="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}}return Qe(e)}function ze(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}function Xe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||false;r.configurable=true;if("value"in r)r.writable=true;Object.defineProperty(e,r.key,r)}}function Ye(e,t,n){if(t)Xe(e.prototype,t);if(n)Xe(e,n);return e}function Ze(e,t){if(t&&(Qe(t)==="object"||typeof t==="function")){return t}return nt(e)}function $e(e){$e=Object.setPrototypeOf?Object.getPrototypeOf:function e(t){return t.__proto__||Object.getPrototypeOf(t)};return $e(e)}function et(e,t){if(typeof t!=="function"&&t!==null){throw new TypeError("Super expression must either be null or a function")}e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:true,configurable:true}});if(t)tt(e,t)}function tt(e,t){tt=Object.setPrototypeOf||function e(t,n){t.__proto__=n;return t};return tt(e,t)}function nt(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function rt(e,t,n){if(t in e){Object.defineProperty(e,t,{value:n,enumerable:true,configurable:true,writable:true})}else{e[t]=n}return e}var ot=function(e){et(n,e);function n(e){var t;ze(this,n);t=Ze(this,$e(n).call(this,e));rt(nt(nt(t)),"state",{arr:[{id:123456,name:"example",fullName:"example.com"},{id:123457,name:"abc",fullName:"abc.example.com"},{id:123654,name:"japan",fullName:"japan.gateway.com"},{id:125463,name:"gateway",fullName:"gateway.com"},{id:123652,name:"singapore",fullName:"singapore.vn"}]});return t}Ye(n,[{key:"render",value:function e(){var t=this.state.arr;return o.a.createElement("div",null,o.a.createElement("ul",null,t.map(function(e,t){return o.a.createElement("li",{key:t},o.a.createElement("span",{className:"text-info"},e.fullName))})))}}]);return n}(r["Component"]);var at=ot;function ut(e){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){ut=function e(t){return typeof t}}else{ut=function e(t){return t&&typeof Symbol==="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}}return ut(e)}function it(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}function ct(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||false;r.configurable=true;if("value"in r)r.writable=true;Object.defineProperty(e,r.key,r)}}function lt(e,t,n){if(t)ct(e.prototype,t);if(n)ct(e,n);return e}function ft(e,t){if(t&&(ut(t)==="object"||typeof t==="function")){return t}return st(e)}function st(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function pt(e){pt=Object.setPrototypeOf?Object.getPrototypeOf:function e(t){return t.__proto__||Object.getPrototypeOf(t)};return pt(e)}function yt(e,t){if(typeof t!=="function"&&t!==null){throw new TypeError("Super expression must either be null or a function")}e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:true,configurable:true}});if(t)mt(e,t)}function mt(e,t){mt=Object.setPrototypeOf||function e(t,n){t.__proto__=n;return t};return mt(e,t)}var bt=function(e){yt(t,e);function t(){it(this,t);return ft(this,pt(t).apply(this,arguments))}lt(t,[{key:"render",value:function e(){return o.a.createElement("div",null,o.a.createElement(_["a"],{exact:true,path:"/",component:W}),o.a.createElement("div",{className:"container"},o.a.createElement(_["a"],{exact:true,path:"/login",component:_e}),o.a.createElement(_["a"],{exact:true,path:"/register",component:De}),o.a.createElement(_["a"],{exact:true,path:"/profile",component:We}),o.a.createElement(_["a"],{exact:true,path:"/post",component:at})))}}]);return t}(r["Component"]);var vt=n("KaO+");function ht(e){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){ht=function e(t){return typeof t}}else{ht=function e(t){return t&&typeof Symbol==="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}}return ht(e)}function dt(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}function Et(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||false;r.configurable=true;if("value"in r)r.writable=true;Object.defineProperty(e,r.key,r)}}function Ot(e,t,n){if(t)Et(e.prototype,t);if(n)Et(e,n);return e}function gt(e,t){if(t&&(ht(t)==="object"||typeof t==="function")){return t}return wt(e)}function wt(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function St(e){St=Object.setPrototypeOf?Object.getPrototypeOf:function e(t){return t.__proto__||Object.getPrototypeOf(t)};return St(e)}function _t(e,t){if(typeof t!=="function"&&t!==null){throw new TypeError("Super expression must either be null or a function")}e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:true,configurable:true}});if(t)jt(e,t)}function jt(e,t){jt=Object.setPrototypeOf||function e(t,n){t.__proto__=n;return t};return jt(e,t)}var Pt=function(e){_t(t,e);function t(){dt(this,t);return gt(this,St(t).apply(this,arguments))}Ot(t,[{key:"render",value:function e(){return o.a.createElement("h1",null,"Vertical Menu working")}}]);return t}(r["Component"]);var kt=Pt;function Tt(e){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){Tt=function e(t){return typeof t}}else{Tt=function e(t){return t&&typeof Symbol==="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t}}return Tt(e)}function Ut(e,t){if(!(e instanceof t)){throw new TypeError("Cannot call a class as a function")}}function Nt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||false;r.configurable=true;if("value"in r)r.writable=true;Object.defineProperty(e,r.key,r)}}function Ct(e,t,n){if(t)Nt(e.prototype,t);if(n)Nt(e,n);return e}function xt(e,t){if(t&&(Tt(t)==="object"||typeof t==="function")){return t}return Rt(e)}function Rt(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function It(e){It=Object.setPrototypeOf?Object.getPrototypeOf:function e(t){return t.__proto__||Object.getPrototypeOf(t)};return It(e)}function Dt(e,t){if(typeof t!=="function"&&t!==null){throw new TypeError("Super expression must either be null or a function")}e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:true,configurable:true}});if(t)Gt(e,t)}function Gt(e,t){Gt=Object.setPrototypeOf||function e(t,n){t.__proto__=n;return t};return Gt(e,t)}var Lt=function(e){Dt(n,e);function n(e){var t;Ut(this,n);t=xt(this,It(n).call(this,e));t.state={role:0};return t}Ct(n,[{key:"componentDidMount",value:function e(){if(localStorage.getItem("token")){var t=localStorage.userToken;var n=fe()(t);this.setState({role:Number.parseInt(n.identity.role)})}}},{key:"componentWillReceiveProps",value:function e(t,n){}},{key:"render",value:function e(){var t=o.a.createElement("div",{id:"main-app"},o.a.createElement(w,null),o.a.createElement(bt,null));var n=o.a.createElement("div",{id:"main-app"},o.a.createElement(kt,null));return o.a.createElement(S["a"],null,this.state.role!=1?t:n)}}]);return n}(r["Component"]);var Ft=function e(t){console.log(t);return{currentUser:t.currentUser}};var At=function e(t){return{}};var Ht=Object(l["b"])(Ft,null)(Lt);var Bt=n("q4sD");var Mt=n("EVdn");var Vt=n("Pkg3");var qt=n("ANjH");var Jt={};var Kt=function e(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:Jt;var n=arguments.length>1?arguments[1]:undefined;switch(n.type){case T.UPDATE_USER:return n.user;default:return t}};var Wt=Kt;function Qt(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};var r=Object.keys(n);if(typeof Object.getOwnPropertySymbols==="function"){r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))}r.forEach(function(e){zt(t,e,n[e])})}return t}function zt(e,t,n){if(t in e){Object.defineProperty(e,t,{value:n,enumerable:true,configurable:true,writable:true})}else{e[t]=n}return e}var Xt={};var Yt=function e(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:Xt;var n=arguments.length>1?arguments[1]:undefined;switch(n.type){case te:return Qt({},n.token);default:return Qt({},t)}};var Zt=Yt;var $t=[];var en=function e(){var t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:$t;var n=arguments.length>1?arguments[1]:undefined;switch(n.type){case T.GET_USERS:return n.users;default:return t}};var tn=en;var nn=Object(qt["c"])({currentUser:Wt,profile:Zt,users:tn});var rn=nn;var on=n("sINF");var an=Object(qt["d"])(rn,Object(qt["a"])(on["a"]));var un=document.getElementById("app");u.a.render(o.a.createElement(l["a"],{store:an},o.a.createElement(Ht,un.dataset)),un)}},[["tjUo",30,1,18,5,19,20,2,3,10,14,16,17,15,24,25,26,29,4,6,7,8,9,11,12,13,22,21,23,27,28]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,